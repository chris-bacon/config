
==================== FINAL INTERFACE ====================
2019-03-17 22:09:52.402195189 UTC

interface main:Neovim.Example.Plugin.Random 8064
  interface hash: 300b99a9e8681e3f0b9a7801c128d480
  ABI hash: 13491cce86333edff50fa3e7ef42f93c
  export-list hash: bb01e6cbca242cbcd2222ef9afeb3492
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5ee933e23545684835ca9dfb3784d023
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Neovim.Example.Plugin.Random.nextRandom
  Neovim.Example.Plugin.Random.randomNumbers
  Neovim.Example.Plugin.Random.setNextRandom
module dependencies:
package dependencies: ansi-terminal-0.9 ansi-wl-pprint-0.6.8.2
                      array-0.5.3.0 async-2.2.1 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 case-insensitive-1.2.0.11 cereal-0.5.8.0
                      cereal-conduit-0.8.0 colour-2.3.4 conduit-1.3.1.1
                      containers-0.6.0.1 data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      directory-1.3.3.0 dlist-0.8.0.5 exceptions-0.10.0 filepath-1.4.2.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0 hslogger-1.2.12
                      integer-gmp-1.0.2.0 megaparsec-7.0.4 messagepack-0.5.4
                      mono-traversable-1.0.11.0 mtl-2.2.2 network-2.8.0.0 nvim-hs-2.0.0.0
                      old-locale-1.0.0.7 optparse-applicative-0.14.3.0
                      parser-combinators-1.0.1 pretty-1.1.3.6 prettyprinter-1.2.1
                      prettyprinter-ansi-terminal-1.1.1.2 primitive-0.6.4.0
                      process-1.6.5.0 random-1.1 resourcet-1.2.2 split-0.2.3.3
                      stm-2.5.0.0 streaming-commons-0.2.1.0 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 typed-process-0.2.4.0 unix-2.7.2.2
                      unliftio-0.2.10 unliftio-core-0.1.2.0 unordered-containers-0.2.10.0
                      utf8-string-1.0.1.1 vector-0.12.0.2 vector-algorithms-0.8.0.1
orphans: network-2.8.0.0:Network.Socket
         vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.6.2:Control.Monad.Trans.Error
         colour-2.3.4:Data.Colour text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.5:Data.DList ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         messagepack-0.5.4:Data.MessagePack
                         mono-traversable-1.0.11.0:Data.MonoTraversable
                         mono-traversable-1.0.11.0:Data.NonNull
                         mono-traversable-1.0.11.0:Data.Sequences
                         nvim-hs-2.0.0.0:Neovim.API.String
                         nvim-hs-2.0.0.0:Neovim.Plugin.Classes
                         nvim-hs-2.0.0.0:Neovim.Plugin.IPC.Classes
                         nvim-hs-2.0.0.0:Neovim.RPC.Classes
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unliftio-0.2.10:UnliftIO.Internals.Async
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Control.Monad.IO.Class e96805f9d79f75be66a0d44eb83064c1
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Conc.Sync 275e94c5ede09d3593e4c106b892e4f5
import  -/  base-4.12.0.0:GHC.Int 75a738083d98da9ebef0ff75df759462
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  mtl-2.2.2:Control.Monad.Reader.Class 56d676c7504f5007ee5b66906716abcc
import  -/  nvim-hs-2.0.0.0:Neovim 167669be48234d69ad1483fe71c0a30e
import  -/  nvim-hs-2.0.0.0:Neovim.Context.Internal 18ef550ed059bc886ea89ec66dd281a9
import  -/  random-1.1:System.Random a2913fef910fa7846b8be540f8dcdaf5
import  -/  stm-2.5.0.0:Control.Concurrent.STM.TVar 0c9d575bf8c6f7f66638977dd8618f1e
import  -/  unliftio-0.2.10:UnliftIO.STM 7bc6611c5872cf2df0229aea39d7fe58
244827eb1b2a8db069d756bcb55096ac
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Neovim.Example.Plugin.Random.$trModule3
                   Neovim.Example.Plugin.Random.$trModule1) -}
619a6cb1937b9c29489ba2b92443bba5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Neovim.Example.Plugin.Random.$trModule2) -}
4d08da4fb7d0ade32d78a07a4956ca0f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Neovim.Example.Plugin.Random"#) -}
3c85758a4e6ba306bad59ccaa949f253
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Neovim.Example.Plugin.Random.$trModule4) -}
83ddc75caee938048611a3f661466b65
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
9d6eaee7aefd4a0cdd997e7643fa8f59
  $wnextRandom ::
    GHC.Prim.TVar# GHC.Prim.RealWorld [GHC.Int.Int16]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int16 #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld [GHC.Int.Int16])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.atomically#
                   @ GHC.Int.Int16
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ [GHC.Int.Int16]
                           ww
                           s of ds { (#,#) ipv ipv1 ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ [GHC.Int.Int16]
                           ww
                           ipv of ds1 { (#,#) ipv2 ipv3 ->
                    case GHC.Prim.writeTVar#
                           @ GHC.Prim.RealWorld
                           @ [GHC.Int.Int16]
                           ww
                           (GHC.List.tail @ GHC.Int.Int16 ipv3)
                           ipv2 of s2# { DEFAULT ->
                    (# s2#, GHC.List.head @ GHC.Int.Int16 ipv1 #) } } })
                   w) -}
dec2db65d80b0c3bb4d340d40c9ec961
  $wrandomNumbers ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar [GHC.Int.Int16] #)
  {- Arity: 1, Strictness: <S,U>, Inline: [2],
     Unfolding: (\ @ startupEnv
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, System.Random.StdGen)
                        @ System.Random.StdGen
                        r#
                        System.Random.newStdGen2
                        w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of b1 { System.Random.StdGen ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ [GHC.Int.Int16]
                        @ GHC.Prim.RealWorld
                        (Neovim.Example.Plugin.Random.randomNumbers_go b1)
                        ipv of ds { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Conc.Sync.TVar @ [GHC.Int.Int16] ipv5 #) } } } }) -}
6622127026aad2fc1f3e2608dc7eef19
  type MyNeovim a =
    Neovim.Context.Internal.Neovim
      (GHC.Conc.Sync.TVar [GHC.Int.Int16]) a
537f8a2113be6befae575f46b1e48495
  nextRandom :: Neovim.Example.Plugin.Random.MyNeovim GHC.Int.Int16
  {- Arity: 3,
     Strictness: <L,A><S(LLLLLLS(S)),1*U(A,A,A,A,A,A,1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Neovim.Example.Plugin.Random.nextRandom1
                  `cast`
                ((<GHC.IORef.IORef
                     Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                  ->_R (<Neovim.Context.Internal.Config
                           (GHC.Conc.Sync.TVar [GHC.Int.Int16])>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <GHC.Int.Int16>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                     <Neovim.Context.Internal.Config
                                                                        (GHC.Conc.Sync.TVar
                                                                           [GHC.Int.Int16])>_R
                                                                     <GHC.Types.IO>_R
                                                                     <GHC.Int.Int16>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                     <Control.Monad.Trans.Reader.ReaderT
                                                                                                        (Neovim.Context.Internal.Config
                                                                                                           (GHC.Conc.Sync.TVar
                                                                                                              [GHC.Int.Int16]))
                                                                                                        GHC.Types.IO>_R
                                                                                                     <GHC.Int.Int16>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                                                   <GHC.Conc.Sync.TVar
                                                                                                                                      [GHC.Int.Int16]>_R) <GHC.Int.Int16>_N)) -}
0ac7dcff53ee464b6554691c88370985
  nextRandom1 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> Neovim.Context.Internal.Config
         (GHC.Conc.Sync.TVar [GHC.Int.Int16])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int16 #)
  {- Arity: 3,
     Strictness: <L,A><S(LLLLLLS(S)),1*U(A,A,A,A,A,A,1*U(U))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (w1 :: Neovim.Context.Internal.Config
                            (GHC.Conc.Sync.TVar [GHC.Int.Int16]))
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Neovim.Context.Internal.Config ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww7 of ww8 { GHC.Conc.Sync.TVar ww9 ->
                 Neovim.Example.Plugin.Random.$wnextRandom ww9 w2 } }) -}
23566a763945150836d714300ecd120b
  randomNumbers ::
    Neovim.Context.Internal.Neovim
      startupEnv (GHC.Conc.Sync.TVar [GHC.Int.Int16])
  {- Arity: 3, Strictness: <L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Neovim.Example.Plugin.Random.randomNumbers1
                  `cast`
                (forall (startupEnv :: <*>_N).
                 (<GHC.IORef.IORef
                     Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                  ->_R (<Neovim.Context.Internal.Config startupEnv>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <GHC.Conc.Sync.TVar
                                         [GHC.Int.Int16]>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                         <Neovim.Context.Internal.Config
                                                                            startupEnv>_R
                                                                         <GHC.Types.IO>_R
                                                                         <GHC.Conc.Sync.TVar
                                                                            [GHC.Int.Int16]>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                             <Control.Monad.Trans.Reader.ReaderT
                                                                                                                (Neovim.Context.Internal.Config
                                                                                                                   startupEnv)
                                                                                                                GHC.Types.IO>_R
                                                                                                             <GHC.Conc.Sync.TVar
                                                                                                                [GHC.Int.Int16]>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                                                               <startupEnv>_R) <GHC.Conc.Sync.TVar
                                                                                                                                                                  [GHC.Int.Int16]>_N)) -}
27eea26b1636c53503a9e23e0fdea73c
  randomNumbers1 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> Neovim.Context.Internal.Config startupEnv
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar [GHC.Int.Int16] #)
  {- Arity: 3, Strictness: <L,A><L,A><S,U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ @ startupEnv
                   (w :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (w1 :: Neovim.Context.Internal.Config startupEnv)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Neovim.Example.Plugin.Random.$wrandomNumbers @ startupEnv w2) -}
d54563d6880e6b1479cba8512b29d168
  randomNumbers_go :: System.Random.StdGen -> [GHC.Int.Int16]
  {- Arity: 1, Strictness: <L,U(U,U)>m2 -}
79ff8f1061f1d7a4441bf75851f8bd7d
  setNextRandom ::
    GHC.Int.Int16 -> Neovim.Example.Plugin.Random.MyNeovim ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U><L,A><S(LLLLLLS(S)),1*U(A,A,A,A,A,A,1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Neovim.Example.Plugin.Random.setNextRandom1
                  `cast`
                (<GHC.Int.Int16>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R (<Neovim.Context.Internal.Config
                                (GHC.Conc.Sync.TVar [GHC.Int.Int16])>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <()>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                               <Neovim.Context.Internal.Config
                                                                  (GHC.Conc.Sync.TVar
                                                                     [GHC.Int.Int16])>_R
                                                               <GHC.Types.IO>_R
                                                               <()>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                    <Control.Monad.Trans.Reader.ReaderT
                                                                                       (Neovim.Context.Internal.Config
                                                                                          (GHC.Conc.Sync.TVar
                                                                                             [GHC.Int.Int16]))
                                                                                       GHC.Types.IO>_R
                                                                                    <()>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                       <GHC.Conc.Sync.TVar
                                                                                                          [GHC.Int.Int16]>_R) <()>_N)) -}
4d71e830691b3cb19ad1a3f3ad02f1dc
  setNextRandom1 ::
    GHC.Int.Int16
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> Neovim.Context.Internal.Config
         (GHC.Conc.Sync.TVar [GHC.Int.Int16])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U><L,A><S(LLLLLLS(S)),1*U(A,A,A,A,A,A,1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (n :: GHC.Int.Int16)
                   (eta :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta1 :: Neovim.Context.Internal.Config
                              (GHC.Conc.Sync.TVar [GHC.Int.Int16]))
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.atomically#
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case eta1 of wild { Neovim.Context.Internal.Config ds ds1 ds2 ds3 ds4 ds5 ds6 ->
                    case ds6 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ [GHC.Int.Int16]
                           tvar#
                           s of ds7 { (#,#) ipv ipv1 ->
                    case GHC.Prim.writeTVar#
                           @ GHC.Prim.RealWorld
                           @ [GHC.Int.Int16]
                           tvar#
                           (GHC.Types.: @ GHC.Int.Int16 n ipv1)
                           ipv of s2# { DEFAULT ->
                    (# s2#, GHC.Tuple.() #) } } } })
                   eta2) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

