
==================== FINAL INTERFACE ====================
2019-03-13 21:40:17.645899687 UTC

interface main:HaskellFormatImport 8064
  interface hash: 15d05e7502bba3d3450ab9732c489430
  ABI hash: ccb865acf5664d8e099ede7ad8b58857
  export-list hash: 033bf070dd086c3f5a8bd90fff28fe29
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 30a727c15f9cacf7883195c464fa10af
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: True
  where
exports:
  HaskellFormatImport.plugin
module dependencies: HaskellFormatImport.Plugin
package dependencies: ansi-terminal-0.9 ansi-wl-pprint-0.6.8.2
                      array-0.5.3.0 async-2.2.1 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 case-insensitive-1.2.0.11 cereal-0.5.8.0
                      cereal-conduit-0.8.0 colour-2.3.4 conduit-1.3.1.1
                      containers-0.6.0.1 data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      directory-1.3.3.0 dlist-0.8.0.5 exceptions-0.10.0 filepath-1.4.2.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0 hslogger-1.2.12
                      integer-gmp-1.0.2.0 megaparsec-7.0.4 messagepack-0.5.4
                      mono-traversable-1.0.11.0 mtl-2.2.2 network-2.8.0.0 nvim-hs-2.0.0.0
                      old-locale-1.0.0.7 optparse-applicative-0.14.3.0
                      parser-combinators-1.0.1 pretty-1.1.3.6 prettyprinter-1.2.1
                      prettyprinter-ansi-terminal-1.1.1.2 primitive-0.6.4.0
                      process-1.6.5.0 random-1.1 resourcet-1.2.2 split-0.2.3.3
                      stm-2.5.0.0 streaming-commons-0.2.1.0 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 typed-process-0.2.4.0 unix-2.7.2.2
                      unliftio-0.2.10 unliftio-core-0.1.2.0 unordered-containers-0.2.10.0
                      utf8-string-1.0.1.1 vector-0.12.0.2 vector-algorithms-0.8.0.1
orphans: network-2.8.0.0:Network.Socket
         vector-0.12.0.2:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic colour-2.3.4:Data.Colour
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.5:Data.DList ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         messagepack-0.5.4:Data.MessagePack
                         mono-traversable-1.0.11.0:Data.MonoTraversable
                         mono-traversable-1.0.11.0:Data.NonNull
                         mono-traversable-1.0.11.0:Data.Sequences
                         nvim-hs-2.0.0.0:Neovim.API.String
                         nvim-hs-2.0.0.0:Neovim.Plugin.Classes
                         nvim-hs-2.0.0.0:Neovim.Plugin.IPC.Classes
                         nvim-hs-2.0.0.0:Neovim.RPC.Classes
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unliftio-0.2.10:UnliftIO.Internals.Async
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Exception 241d5c93d2929e130965d588cd89f59e
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  HaskellFormatImport.Plugin 380a270065aa4de87b85dc6acee8560f
  exports: 909df02aff884addf7edb56dd219a15c
  haskellFormatImport d1e7d530cc451512d7d5aee7f838f125
import  -/  nvim-hs-2.0.0.0:Neovim 167669be48234d69ad1483fe71c0a30e
import  -/  nvim-hs-2.0.0.0:Neovim.API.TH 5c692f4e109dd3ed6c1c2dd0dd6d0789
import  -/  nvim-hs-2.0.0.0:Neovim.Classes af89bdb97e589d25d0744c97548b2668
import  -/  nvim-hs-2.0.0.0:Neovim.Context 870d14600f9c0e99399c8130391b6dd5
import  -/  nvim-hs-2.0.0.0:Neovim.Context.Internal 18ef550ed059bc886ea89ec66dd281a9
import  -/  nvim-hs-2.0.0.0:Neovim.Exceptions 6429b5c794c86b039b533f0497dcede0
import  -/  nvim-hs-2.0.0.0:Neovim.Plugin.Classes 5f7806180d205a1bc6ed8262ba857416
import  -/  nvim-hs-2.0.0.0:Neovim.Plugin.Internal 00410a85c606261f395f5d2b5d6eec6b
import  -/  prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal 4b53c6eed7145944e9bd73c7468bb048
import  -/  prettyprinter-ansi-terminal-1.1.1.2:Data.Text.Prettyprint.Doc.Render.Terminal.Internal 0cdd13f068aeb2852b7dc0a6c5e759bb
import  -/  utf8-string-1.0.1.1:Data.ByteString.UTF8 55cfc5163ea7ac112ba8a971498f63b1
a8297a62b02d168d3a458bf74108536e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   HaskellFormatImport.$trModule3
                   HaskellFormatImport.$trModule1) -}
f6a255407a04590f9f2850c318acd7cb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HaskellFormatImport.$trModule2) -}
fbfc36cb9a3418efcce45a299034dfb1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HaskellFormatImport"#) -}
01d0fe2c510da75ad5ae40c73833ca43
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HaskellFormatImport.$trModule4) -}
98475758442f8dfa4bce6e2b925062c2
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
182020847e7734bb2902999605b4d14e
  plugin ::
    Neovim.Context.Internal.Neovim
      () Neovim.Plugin.Internal.NeovimPlugin
  {- Arity: 3, Strictness: <L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                HaskellFormatImport.plugin1
                  `cast`
                ((<GHC.IORef.IORef
                     Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                  ->_R (<Neovim.Context.Internal.Config ()>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Neovim.Plugin.Internal.NeovimPlugin>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                           <Neovim.Context.Internal.Config
                                                                                              ()>_R
                                                                                           <GHC.Types.IO>_R
                                                                                           <Neovim.Plugin.Internal.NeovimPlugin>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                                                 <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                    (Neovim.Context.Internal.Config
                                                                                                                                                       ())
                                                                                                                                                    GHC.Types.IO>_R
                                                                                                                                                 <Neovim.Plugin.Internal.NeovimPlugin>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                                                                                                                     <()>_R) <Neovim.Plugin.Internal.NeovimPlugin>_N)) -}
248689a00a87ca0b5f9690e529410927
  plugin1 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> Neovim.Context.Internal.Config ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Neovim.Plugin.Internal.NeovimPlugin #)
  {- Arity: 3, Strictness: <L,A><L,A><S,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: Neovim.Context.Internal.Config ())
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta3, HaskellFormatImport.plugin_eta #)) -}
84425f0e927b8d7bc1ddc03559e12183
  plugin2 :: Neovim.Plugin.Internal.Plugin ()
  {- Strictness: m,
     Unfolding: (Neovim.Plugin.Internal.Plugin
                   @ ()
                   GHC.Tuple.()
                   HaskellFormatImport.plugin3) -}
dcf7f2fa626ce49dc00fb3d7319bb0a7
  plugin3 :: [Neovim.Plugin.Internal.ExportedFunctionality ()]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Neovim.Plugin.Internal.ExportedFunctionality ())
                   HaskellFormatImport.plugin4
                     `cast`
                   (Sym (Neovim.Plugin.Internal.N:ExportedFunctionality[0] <()>_R))
                   (GHC.Types.[]
                      @ (Neovim.Plugin.Internal.ExportedFunctionality ()))) -}
aab38202b79b38a1968b261c210a30d7
  plugin4 ::
    (Neovim.Plugin.Classes.FunctionalityDescription,
     [Data.MessagePack.Object]
     -> Neovim.Context.Internal.Neovim () Data.MessagePack.Object)
  {- Strictness: m,
     Unfolding: ((HaskellFormatImport.plugin7,
                  HaskellFormatImport.plugin5)) -}
227f3cb67bc5c42649916fc869537915
  plugin5 ::
    [Data.MessagePack.Object]
    -> Neovim.Context.Internal.Neovim () Data.MessagePack.Object
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (args :: [Data.MessagePack.Object]) ->
                 case args of wild {
                   [] -> HaskellFormatImport.plugin6
                   : x ds
                   -> case ds of wild1 {
                        []
                        -> case Neovim.Classes.$fNvimObject[]0_$cfromObject x of wild2 {
                             Data.Either.Left x1
                             -> Neovim.Context.err @ () @ Data.MessagePack.Object x1
                             Data.Either.Right y
                             -> (\ (r :: GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                                   (eta :: Neovim.Context.Internal.Config ())
                                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                 case GHC.IO.Handle.FD.openFile1
                                        y
                                        GHC.IO.IOMode.ReadMode
                                        eta1 of ds1 { (#,#) ipv ipv1 ->
                                 case GHC.IO.Handle.Text.hGetContents1
                                        ipv1
                                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                                 (# ipv2,
                                    Data.MessagePack.ObjectArray
                                      (HaskellFormatImport.plugin_go
                                         (Data.OldList.lines ipv3)) #) } })
                                  `cast`
                                ((<GHC.IORef.IORef
                                     Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                  ->_R (<Neovim.Context.Internal.Config ()>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Data.MessagePack.Object>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                               <Neovim.Context.Internal.Config
                                                                                                  ()>_R
                                                                                               <GHC.Types.IO>_R
                                                                                               <Data.MessagePack.Object>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                                         <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                            (Neovim.Context.Internal.Config
                                                                                                                                               ())
                                                                                                                                            GHC.Types.IO>_R
                                                                                                                                         <Data.MessagePack.Object>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                                                                                                 <()>_R) <Data.MessagePack.Object>_N)) }
                        : ipv ipv1 -> HaskellFormatImport.plugin6 } }) -}
598f4293112646ee77e86ec483946219
  plugin6 ::
    Neovim.Context.Internal.Neovim () Data.MessagePack.Object
  {- Strictness: x -}
df8452f3ef2b030c7bfdbdd42943b616
  plugin7 :: Neovim.Plugin.Classes.FunctionalityDescription
  {- Strictness: m1,
     Unfolding: (Neovim.Plugin.Classes.Function
                   HaskellFormatImport.plugin8
                     `cast`
                   (Sym (Neovim.Plugin.Classes.N:FunctionName[0]))
                   Neovim.Plugin.Classes.Sync) -}
5676b5764a98543c4e679ae87fd60942
  plugin8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.ByteString.UTF8.fromString
                   (GHC.CString.unpackCString# HaskellFormatImport.$trModule2)) -}
eb15c9a9101aa38162f538c110c93a28
  plugin_eta :: Neovim.Plugin.Internal.NeovimPlugin
  {- Unfolding: (Neovim.Plugin.Internal.NeovimPlugin
                   @ ()
                   HaskellFormatImport.plugin2) -}
5e0595af605dbce60cda48239211a26b
  plugin_go :: [[GHC.Types.Char]] -> [Data.MessagePack.Object]
  {- Arity: 1, Strictness: <S,1*U> -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

