
==================== FINAL INTERFACE ====================
2019-03-20 14:04:38.548739198 UTC

interface main:HaskellFormatImport 8064
  interface hash: 5be4ab84478af03e29879942afc1d92a
  ABI hash: dfed08fea4aadce63a261416d0e3502a
  export-list hash: ce004840623cc01339b4948058bc5933
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 30a727c15f9cacf7883195c464fa10af
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: True
  where
exports:
  HaskellFormatImport.plugin
module dependencies: HaskellFormatImport.Plugin
package dependencies: ansi-terminal-0.9 ansi-wl-pprint-0.6.8.2
                      array-0.5.3.0 async-2.2.1 base-4.12.0.0 basement-0.0.10
                      binary-0.8.6.0 bytestring-0.10.8.2 case-insensitive-1.2.0.11
                      cereal-0.5.8.0 cereal-conduit-0.8.0 colour-2.3.4 conduit-1.3.1.1
                      containers-0.6.0.1 data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      directory-1.3.3.0 dlist-0.8.0.5 exceptions-0.10.0 filepath-1.4.2.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0 hslogger-1.2.12
                      integer-gmp-1.0.2.0 megaparsec-7.0.4 messagepack-0.5.4
                      mono-traversable-1.0.11.0 mtl-2.2.2 network-2.8.0.0 nvim-hs-2.0.0.0
                      old-locale-1.0.0.7 optparse-applicative-0.14.3.0
                      parser-combinators-1.0.1 pretty-1.1.3.6 prettyprinter-1.2.1
                      prettyprinter-ansi-terminal-1.1.1.2 primitive-0.6.4.0
                      process-1.6.5.0 random-1.1 regex-base-0.93.2 regex-compat-0.95.1
                      regex-posix-0.95.2 resourcet-1.2.2 split-0.2.3.3 stm-2.5.0.0
                      streaming-commons-0.2.1.0 template-haskell-2.14.0.0 text-1.2.3.1
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      typed-process-0.2.4.0 unix-2.7.2.2 unliftio-0.2.10
                      unliftio-core-0.1.2.0 unordered-containers-0.2.10.0
                      utf8-string-1.0.1.1 vector-0.12.0.2 vector-algorithms-0.8.0.1
orphans: regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         network-2.8.0.0:Network.Socket vector-0.12.0.2:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic colour-2.3.4:Data.Colour
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.5:Data.DList ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         messagepack-0.5.4:Data.MessagePack
                         mono-traversable-1.0.11.0:Data.MonoTraversable
                         mono-traversable-1.0.11.0:Data.NonNull
                         mono-traversable-1.0.11.0:Data.Sequences
                         nvim-hs-2.0.0.0:Neovim.API.String
                         nvim-hs-2.0.0.0:Neovim.Plugin.Classes
                         nvim-hs-2.0.0.0:Neovim.Plugin.IPC.Classes
                         nvim-hs-2.0.0.0:Neovim.RPC.Classes
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unliftio-0.2.10:UnliftIO.Internals.Async
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Exception 241d5c93d2929e130965d588cd89f59e
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  HaskellFormatImport.Plugin 19d8b2633b5089b1c25289b482c43303
  exports: 70e89af5e08ab6e6c2f4cb7d53dadf96
  haskellFormatImport 33f2832d587e361b18a822ab2a6f178d
import  -/  nvim-hs-2.0.0.0:Neovim 167669be48234d69ad1483fe71c0a30e
import  -/  nvim-hs-2.0.0.0:Neovim.API.TH 5c692f4e109dd3ed6c1c2dd0dd6d0789
import  -/  nvim-hs-2.0.0.0:Neovim.Classes af89bdb97e589d25d0744c97548b2668
import  -/  nvim-hs-2.0.0.0:Neovim.Context 870d14600f9c0e99399c8130391b6dd5
import  -/  nvim-hs-2.0.0.0:Neovim.Context.Internal 18ef550ed059bc886ea89ec66dd281a9
import  -/  nvim-hs-2.0.0.0:Neovim.Exceptions 6429b5c794c86b039b533f0497dcede0
import  -/  nvim-hs-2.0.0.0:Neovim.Plugin.Classes 5f7806180d205a1bc6ed8262ba857416
import  -/  nvim-hs-2.0.0.0:Neovim.Plugin.Internal 00410a85c606261f395f5d2b5d6eec6b
import  -/  prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal 4b53c6eed7145944e9bd73c7468bb048
import  -/  prettyprinter-ansi-terminal-1.1.1.2:Data.Text.Prettyprint.Doc.Render.Terminal.Internal 0cdd13f068aeb2852b7dc0a6c5e759bb
import  -/  utf8-string-1.0.1.1:Data.ByteString.UTF8 55cfc5163ea7ac112ba8a971498f63b1
a8297a62b02d168d3a458bf74108536e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   HaskellFormatImport.$trModule3
                   HaskellFormatImport.$trModule1) -}
f6a255407a04590f9f2850c318acd7cb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HaskellFormatImport.$trModule2) -}
fbfc36cb9a3418efcce45a299034dfb1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HaskellFormatImport"#) -}
01d0fe2c510da75ad5ae40c73833ca43
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HaskellFormatImport.$trModule4) -}
98475758442f8dfa4bce6e2b925062c2
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
9df21439ca7379d04253cef4124ab721
  plugin ::
    Neovim.Context.Internal.Neovim
      () Neovim.Plugin.Internal.NeovimPlugin
  {- Arity: 3, Strictness: <L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                HaskellFormatImport.plugin1
                  `cast`
                ((<GHC.IORef.IORef
                     Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                  ->_R (<Neovim.Context.Internal.Config ()>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Neovim.Plugin.Internal.NeovimPlugin>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                           <Neovim.Context.Internal.Config
                                                                                              ()>_R
                                                                                           <GHC.Types.IO>_R
                                                                                           <Neovim.Plugin.Internal.NeovimPlugin>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                                                 <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                    (Neovim.Context.Internal.Config
                                                                                                                                                       ())
                                                                                                                                                    GHC.Types.IO>_R
                                                                                                                                                 <Neovim.Plugin.Internal.NeovimPlugin>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                                                                                                                     <()>_R) <Neovim.Plugin.Internal.NeovimPlugin>_N)) -}
452a3824e870baba18b6c865b21fac74
  plugin1 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> Neovim.Context.Internal.Config ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Neovim.Plugin.Internal.NeovimPlugin #)
  {- Arity: 3, Strictness: <L,A><L,A><S,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (eta2 :: Neovim.Context.Internal.Config ())
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta3, HaskellFormatImport.plugin_eta #)) -}
16676e05703c0d5adab33f28d854c6e7
  plugin10 :: [Neovim.Plugin.Classes.CommandOption]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Neovim.Plugin.Classes.CommandOption
                   HaskellFormatImport.plugin14
                   HaskellFormatImport.plugin11) -}
71a47b6f12442871ca4b854e1321e722
  plugin11 :: [Neovim.Plugin.Classes.CommandOption]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Neovim.Plugin.Classes.CommandOption
                   HaskellFormatImport.plugin12
                   (GHC.Types.[] @ Neovim.Plugin.Classes.CommandOption)) -}
1079bf4ec7be00c156849f6ca91c23e8
  plugin12 :: Neovim.Plugin.Classes.CommandOption
  {- Unfolding: (Neovim.Plugin.Classes.$fIsStringCommandOption_$cfromString
                   (GHC.CString.unpackCString# HaskellFormatImport.plugin13)) -}
29fba1a765d07f7768530c7c345e0f37
  plugin13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sync"#) -}
a97ddce5ffaf6e4f43b793a1dc31bb3f
  plugin14 :: Neovim.Plugin.Classes.CommandOption
  {- Unfolding: (Neovim.Plugin.Classes.$fIsStringCommandOption_$cfromString
                   (GHC.CString.unpackCString# HaskellFormatImport.plugin15)) -}
8164b5971bf6c7860d0280894fcd832c
  plugin15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("%"#) -}
7a0b9d6eb19b3c6c603b8e790449cf25
  plugin16 :: Neovim.Plugin.Classes.CommandOption
  {- Strictness: m3,
     Unfolding: (Neovim.Plugin.Classes.CmdNargs
                   HaskellFormatImport.plugin17) -}
3202749abf32a7b89e91ae12b8040e91
  plugin17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   HaskellFormatImport.plugin18) -}
5b7055879522b90824fe7b25cefaf462
  plugin18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("0"#) -}
795649087fa9a4f6447b4d8bc6cb5540
  plugin19 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.ByteString.UTF8.fromString
                   (GHC.CString.unpackCString# HaskellFormatImport.$trModule2)) -}
0dc43b9b59be8bd20012c44a0388f2e7
  plugin2 :: Neovim.Plugin.Internal.Plugin ()
  {- Strictness: m,
     Unfolding: (Neovim.Plugin.Internal.Plugin
                   @ ()
                   GHC.Tuple.()
                   HaskellFormatImport.plugin3) -}
356950ea4995847fb54e785d1a9ff76c
  plugin3 :: [Neovim.Plugin.Internal.ExportedFunctionality ()]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Neovim.Plugin.Internal.ExportedFunctionality ())
                   HaskellFormatImport.plugin4
                     `cast`
                   (Sym (Neovim.Plugin.Internal.N:ExportedFunctionality[0] <()>_R))
                   (GHC.Types.[]
                      @ (Neovim.Plugin.Internal.ExportedFunctionality ()))) -}
5dfc5678cbf38ce4f2e665bb304dc7ef
  plugin4 ::
    (Neovim.Plugin.Classes.FunctionalityDescription,
     [Data.MessagePack.Object]
     -> Neovim.Context.Internal.Neovim () Data.MessagePack.Object)
  {- Strictness: m,
     Unfolding: ((HaskellFormatImport.plugin7,
                  HaskellFormatImport.plugin5)) -}
d6ef2bbac2336fbab6efa3d6c5e3b189
  plugin5 ::
    [Data.MessagePack.Object]
    -> Neovim.Context.Internal.Neovim () Data.MessagePack.Object
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (args :: [Data.MessagePack.Object]) ->
                 case args of wild {
                   [] -> HaskellFormatImport.plugin6
                   : x ds
                   -> case ds of wild1 {
                        []
                        -> case Neovim.Plugin.Classes.$fNvimObjectCommandArguments_$cfromObject
                                  x of wild2 {
                             Data.Either.Left x1
                             -> Neovim.Context.err @ () @ Data.MessagePack.Object x1
                             Data.Either.Right y
                             -> (\ (r :: GHC.IORef.IORef
                                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                                   (eta :: Neovim.Context.Internal.Config ())
                                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                 case y of ww { Neovim.Plugin.Classes.CommandArguments ww1 ww2 ww3 ww4 ->
                                 case HaskellFormatImport.Plugin.$whaskellFormatImport
                                        @ ()
                                        ww2
                                        r
                                        eta
                                        eta1 of ds1 { (#,#) ipv ipv1 ->
                                 (# ipv, Data.MessagePack.ObjectNil #) } })
                                  `cast`
                                ((<GHC.IORef.IORef
                                     Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                  ->_R (<Neovim.Context.Internal.Config ()>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Data.MessagePack.Object>_R)) ; Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                               <Neovim.Context.Internal.Config
                                                                                                  ()>_R
                                                                                               <GHC.Types.IO>_R
                                                                                               <Data.MessagePack.Object>_N)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                                         <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                            (Neovim.Context.Internal.Config
                                                                                                                                               ())
                                                                                                                                            GHC.Types.IO>_R
                                                                                                                                         <Data.MessagePack.Object>_N) ; Sym (Neovim.Context.Internal.N:Neovim[0]
                                                                                                                                                                                 <()>_R) <Data.MessagePack.Object>_N)) }
                        : ipv ipv1 -> HaskellFormatImport.plugin6 } }) -}
598f4293112646ee77e86ec483946219
  plugin6 ::
    Neovim.Context.Internal.Neovim () Data.MessagePack.Object
  {- Strictness: x -}
ade96e79a97d8f78e0f9de29088e18e9
  plugin7 :: Neovim.Plugin.Classes.FunctionalityDescription
  {- Strictness: m2,
     Unfolding: (Neovim.Plugin.Classes.Command
                   HaskellFormatImport.plugin19
                     `cast`
                   (Sym (Neovim.Plugin.Classes.N:FunctionName[0]))
                   HaskellFormatImport.plugin8
                     `cast`
                   (Sym (Neovim.Plugin.Classes.N:CommandOptions[0]))) -}
95f541d736d038b9eda7ce9549ea82e1
  plugin8 :: [Neovim.Plugin.Classes.CommandOption]
  {- Unfolding: (Neovim.Plugin.Classes.mkCommandOptions_g
                   HaskellFormatImport.plugin9) -}
4e9668c9cf8713876438b9a0cf5654e6
  plugin9 :: [Neovim.Plugin.Classes.CommandOption]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Neovim.Plugin.Classes.CommandOption
                   HaskellFormatImport.plugin16
                   HaskellFormatImport.plugin10) -}
470fd4abce589c64d06c1802c5656eb2
  plugin_eta :: Neovim.Plugin.Internal.NeovimPlugin
  {- Unfolding: (Neovim.Plugin.Internal.NeovimPlugin
                   @ ()
                   HaskellFormatImport.plugin2) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

